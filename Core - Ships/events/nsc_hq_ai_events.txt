# ==============================
# Twiddle those nobs!
#
@req_galaxy_age = 74
@req_owned_planets = 3
@req_monthly_minerals = 80
@req_monthly_energy = 80

@months_to_regen = 3
@hq_station_cost = 12000
@hq_station_cost_negative = -12000

# Quote crusader:
# 2 We need to figure out a set income and reserve level that is required to build
# the HQ Station, which I'm not going to do since I don't pay that close of attention
# to normal numbers the AI has. This number will be key!

# ==============================

#

#
# 3. It needs to be limited to colonized worlds, starting with the homeworld/capital
# planet, and then any other acceptable colonized system. If all the colonized systems
# have an enemy fleet, it cannot be built until the moment a fleet leaves a system.
#
# 4. If the HQ Station is destroyed, there is a 3 month waiting period assuming the
# AI has the same budget requirements as the first build, and their are no enemy fleets
# in the system. If the AI doesn't have budget requirements, we loop it back on a
# 3 month delay to check again, same for the "enemy fleets in all systems", if we must.

namespace = "nsc_hq_ai"

country_event = {
	id = "nsc_hq_ai.1"
	hide_window = yes

# 1. It cannot be built within the first 75 years of a game.
# Unless Folk can figure out a way to adapt for "research_technologies" commands or
# country_type module settings, we ignore cheats with no patience, like Captain.
	trigger = {
		years_passed > @req_galaxy_age
		is_country_type = "default"
		is_ai = yes
		exists = capital_scope
		num_owned_planets > @req_owned_planets
	}

	fire_only_once = yes

	immediate = {
		set_country_flag = "nsc_ai_shouldhavehq"
		if = {
			limit = { NOT = { has_technology = "tech_headquarters_1" } }
			give_technology = "tech_headquarters_1"
		}
	}
}

country_event = {
	id = "nsc_hq_ai.2"
	hide_window = yes

	mean_time_to_happen = {
		months = @months_to_regen
	}
	trigger = {
		has_country_flag = "nsc_ai_shouldhavehq"

		is_ai = yes
		is_at_war = no
		num_owned_planets > @req_owned_planets

		count_owned_ships = {
			limit = { is_ship_size = Headquarters }
			count = 0
		}

		has_monthly_income = {
			resource = energy
			value > @req_monthly_energy
		}
		has_monthly_income = {
			resource = minerals
			value > @req_monthly_minerals
		}
		has_country_resource = {
			type = minerals
			amount > @hq_station_cost
		}

		NOT = {
			capital_scope = {
				solar_system = {
					any_ship_in_system = {
						exists = owner
						owner = {
							is_hostile = root
						}
					}
				}
			}
		}
	}

	immediate = {
		add_minerals = @hq_station_cost_negative
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = Headquarters
				}
				set_location = {
					target = root.capital_scope
					distance = 20
					angle = random
				}
			}
		}
	}
}


